{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","second.js","reportWebVitals.js","fonts/RenoMono.otf","fonts/upheavtt.ttf","fonts.js","index.js"],"names":["initialState","loading","account","smartContract","smartToken","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","connect","fetch","headers","Accept","abiResponse","tokenabiResponse","json","abi","tokenabi","configResponse","CONFIG","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","NETWORK","ID","SmartContractObj","CONTRACT_ADDRESS","TOKENABI","TOKEN_ADDRESS","on","updateAccount","location","reload","userchain","CHID","utils","toHex","toString","params","chainId","code","NAME","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","AmountContainer","TextTitle","p","TextSub","TextTotal","TextSubTitle","TextDescription","TEXTamount","Icons","hr","img","HeaderDiv","socialDiv","Headerlinks","SecContainer","TextP","button","StyledButton","CTNButton","Maxbtn","StyledRoundButton","LogoDiv","ResponsiveWrapper","ResponsiveWrapperHeader","StyledLogo","StyledImg","StyledLink","WalletBox","App","useDispatch","useSelector","useState","walletAddress","setAddress","claimingNft","setClaimingNft","IncreaseAllowance","setAllowance","feedback","setFeedback","tokens","settokens","brd","setbrd","bxsh","setbxsh","DOT","setDOT","React","placement","errmessage","Notification","header","closable","txmessage","mntmessage","Loader","SCAN_LINK","SYMBOL","NFT_NAME","MAX_SUPPLY","DISPLAY_COST","WL_Display","GAS_LIMIT","MAX_PER_TX","MARKETPLACE","MARKETPLACE_LINK","Telegram","Discord","Twitter","SHOW_BACKGROUND","SET_CONFIG","increaseAllowance","gasLimit","totalGasLimit","String","toaster","push","send","to","from","value","once","err","then","receipt","getData","substring","getConfig","config","useEffect","style","backgroundColor","href","target","alt","src","fontSize","color","Badge","padding","Number","textAlign","fontFamily","background","borderRadius","onClick","e","preventDefault","width","paddingLeft","border","boxShadow","lineHeight","disabled","newtokens","decrementtokens","incrementtokens","price","toWei","mint","claimNFTs","speed","content","id","Second","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","Upheaval","RenoMono","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a51d414.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  smartToken: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        smartToken: action.payload.smartToken,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\n\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const tokenabiResponse = await fetch(\"/config/tokenabi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const tokenabi= await tokenabiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n            const TOKENABI = new Web3EthContract(\n              tokenabi,\n              CONFIG.TOKEN_ADDRESS\n            );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              smartToken: TOKENABI ,\n              web3: web3,\n            })\n          );\n\n\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n\n          // Add listeners end\n        }\n        else {\n          let userchain = CONFIG.NETWORK.ID;\n          let CHID = Web3.utils.toHex(userchain.toString());\n          try {\n            await ethereum.request({\n              method: 'wallet_switchEthereumChain',\n              params: [{ chainId: CHID }],\n            });\n          } catch (switchError) {\n            // This error code indicates that the chain has not been added to MetaMask.\n            if (switchError.code === 4902) {\n              dispatch(connectFailed(`Please Add ${CONFIG.NETWORK.NAME} Network to your Metamask.`));\n            }\n          }\n        }\n\n      }\n      \n      \n      catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    } \n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: #fff;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const AmountContainer = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: center;\n  justify-content: center;\n  align-items: center;\n  //border: 2px solid #A673EF;\n  border-radius: 10px;\n  //box-shadow: 0px 0px 3px 0px #A673EF;\n`;\n\n\nexport const TextTitle = styled.p`\n  font-family: 'Upheaval';\n  color: var(--primary-text);\n  font-size: 60px;\n  font-weight: 400;\n  letter-spacing: 8px;\n  line-height: 1.6;\n  text-align: center;\n  @media (max-width: 565px) {\n    font-size: 25px;\n    text-align: center;\n    letter-spacing: 2px;\n  }\n`;\n\nexport const TextSub = styled.p`\n  font-family: 'Upheaval';\n  color: var(--primary-text);\n  font-size: 24px;\n  font-weight: 400;\n  letter-spacing: 8px;\n  line-height: 1.6;\n  @media (max-width: 565px) {\n    font-size: 20px;\n    letter-spacing: 2px;\n  }\n`;\n\nexport const TextTotal = styled.p`\n  font-family: 'Upheaval';\n  color: var(--primary-text);\n  font-size: 1rem;\n  font-weight: 400;\n  letter-spacing: 2px;\n  line-height: 1.6;\n  @media (max-width: 565px) {\n    font-size: 0.75rem;\n    letter-spacing: 2px;\n  }\n`;\n\nexport const TextPrice = styled.p`\n  font-family: 'Upheaval';\n  color: white;\n  font-size: 3rem;\n  font-weight: bold;\n  letter-spacing: 8px;\n  line-height: 1.6;\n  border: 2px solid midnightblue;\n  width: 400px;\n  background: #9DC5F0;\n  text-align: center;\n  @media (max-width: 565px) {\n    font-size: 20px;\n    letter-spacing: 2px;\n    width: 200px;\n  }\n`;\n\nexport const TextSubTitle = styled.p`\n  font-family: 'Renomono';\n  color: var(--primary-text);\n  font-size: 20px;\n  font-weight: 400;\n  line-height: 1.6;\n  @media (max-width: 565px) {\n    font-size: 0.75rem;\n    letter-spacing: 2px;\n    text-align: center;\n  }\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 60px;\n  line-height: 1.6;\n`;\n\nexport const TEXTamount = styled.p`\n  color: var(--primary-text);\n  font-size: 30px;\n  line-height: 1.6;\n  @media (max-width: 565px) {\n    font-size: 20px;\n    line-height: 0;\n  }\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n\nexport const StyledHR = styled.hr`\n  border: 2px solid white;  \n  background-color: white;\n  border-radius: 2px;\n  width: 450px;\n  @media (max-width: 565px) {\n    width: 350px;\n  }\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--primary-text);\n  text-decoration: none;\n  margin-right: 5rem;\n  cursor: pointer;\n  :hover {\n    color: #FF8938;\n  }\n  @media (max-width: 565px) {\n    margin-right: 0.75rem;\n    margin-top: 1rem;\n  }\n`;\n\nexport const Icons = styled.img`\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    margin-right: 1.2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n    :hover {\n      transform: scale(1.5);\n      transition: transform 0.5s;\n    }\n`;\n\nexport const HeaderDiv = styled.div`\ndisplay: flex;\nalign-items: center;\nmargin-right: 3.5rem;\n@media (max-width: 565px) {\n  margin-right: 0;\n  margin-top: 10px;\n  margin-bottom: 20px;\n  flex-direction: column;\n}\n`;\n\nexport const socialDiv = styled.div`\ndisplay: flex;\nalign-items: center;\n@media (max-width: 565px) {\n  margin-right: 0;\n  margin-top: 20px;\n  flex-direction: row;\n}\n`;\n\nexport const Headerlinks = styled.div`\n    display: flex;\n    align-items: center;\n    @media (max-width: 565px) {\n      margin-top: 10px;\n      margin-bottom: 10px;\n    }\n`;\n\nexport const SecContainer = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: center;;\n  align-items: center;\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  margin-top: 5%;\n`;\n\nexport const TextP = styled.p`\ntext-align: center;\nfont-size: 1rem;\nletter-spacing: 1px;\nline-height: 2;\nwidth: 70%;\n`;\n\nexport const ExploreBTN = styled.button`\n  font-family: 'coder';\n  padding: 10px;\n  font-size: 1rem;\n  border-radius: 40px;\n  border: none;\n  background: linear-gradient(86.57deg, #D8AE43 6.92%, rgba(255, 92, 0, 0.79) 100.73%);\n  padding: 10px;\n  letter-spacing: 2px;\n  font-weight: bold;\n  color: white;\n  width: 270px;\n  height: 50px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  :hover {\n    color: black;\n  }\n  @media (max-width: 565px) {\n    width: 200px;\n    height: 50px;\n    font-size: 0.75rem;\n  }\n`;\n\nexport const imgContainer = styled.div`\n  display: flex;\n  background: #171717;\n  border-radius: 40px;\n  width: max-content;\n  margin-top: 5%;\n  align-items: center;\n    justify-content: center;\n    @media (max-width: 565px) {\n      width: 100%;\n    }\n`;\n\nexport const workContainer = styled.div`\n  display: flex;\n  margin-top: 5%;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n  gap: 5%;\n  @media (max-width: 565px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Box = styled.div`\nheight: 120px;\nwidth: 250px;\nborder-radius: 20px;\nbackground: #171717;\npadding: 10px;\n@media (max-width: 565px) {\n  margin-top: 10px;\n}\n:hover {\n  transform: scale(1.2);\n}\n\n`;\n\nexport const innerbox = styled.div`\n    flex-direction: row;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    align-content: center;\n    padding: 10px;\n`;\n\nexport const innerIcons = styled.img`\n    width: 45px;\n    height: 45px;\n    border-radius: 50%;\n    margin-right: 1.2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    cursor: pointer;\n`;\n\nexport const TextPBOX = styled.p`\ntext-align: left;\nwidth: 125px;\nfont-size: 1rem;\n`;\n\nexport const Textbox = styled.p`\ntext-align: left;\nfont-size: 0.75rem;\n`;\n\nexport const CBOX = styled.div`\nwidth: 30%;\n@media (max-width: 565px) {\n  width: 80%;\n}\n`;","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\nimport 'rsuite/styles/index.less';\nimport \"rsuite/dist/rsuite.min.css\";\nimport { Panel, PanelGroup } from 'rsuite';\nimport { Carousel } from 'rsuite';\nimport { Notification, toaster } from 'rsuite';\nimport { Loader } from 'rsuite';\nimport { Badge } from 'rsuite';\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  font-family: 'coder';\n  padding: 10px;\n  font-size: 1rem;\n  border-radius: 6px;\n  border: none;\n  background-color: black;\n  padding: 10px;\n  letter-spacing: 2px;\n  font-weight: bold;\n  color: white;\n  width: 270px;\n  height: 50px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px black;\n  -webkit-box-shadow: 0px 6px 0px -2px black;\n  -moz-box-shadow: 0px 6px 0px -2px black;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  :hover {\n    color: silver;\n  }\n  @media (max-width: 565px) {\n    width: 200px;\n    height: 50px;\n    font-size: 0.75rem;\n  }\n`;\n\nexport const CTNButton = styled.button`\n  font-family: 'coder';\n  padding: 10px;\n  font-size: 1rem;\n  border-radius: 6px;\n  border: none;\n  background-color: black;\n  padding: 10px;\n  letter-spacing: 2px;\n  font-weight: bold;\n  color: white;\n  width: 270px;\n  height: 50px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px black;\n  -webkit-box-shadow: 0px 6px 0px -2px black;\n  -moz-box-shadow: 0px 6px 0px -2px black;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  :hover {\n    color: silver;\n  }\n  @media (max-width: 565px) {\n    width: 200px;\n    height: 50px;\n    font-size: 0.75rem;\n  }\n`;\n\nexport const Maxbtn = styled.button`\n  font-family: 'coder';\n  font-size: 0.75rem;\n  border-radius: 10px;\n  background-color: #F48C2C;\n  font-weight: bold;\n  color: white;\n  width: 80px;\n  height: 30px;\n  cursor: pointer;\n  letter-spacing: 2px;\n  :hover {\n    color: black;\n  }\n  @media (max-width: 565px) {\n    width: 200px;\n    height: 50px;\n    font-size: 0.75rem;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 10px;\n  border: none;\n  background-color: transparent;\n  padding: 10px;\n  font-weight: bold;\n  font-size: 30px;\n  color: white;\n  width: 40px;\n  height: 40px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  :hover {\n    color: silver;\n  }\n`;\n\nexport const LogoDiv = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nalign-content: center;\ngap: 10%;\nwidth: 300px;\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: center;\n  margin: auto;\n  width: 70%;\n  border: 2px solid white;\n  border-radius: 40px;\n  background: linear-gradient(90deg, rgba(135,142,20,1) 10%, rgba(0,125,223,1) 93%);\n    @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ResponsiveWrapperHeader = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  max-height: 80px;\n  padding: 10px;\n  background-color : #252525;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n  @media (max-width: 565px) {\n    max-height: 220px;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  display: inline;\n  width: 200px;\n  @media (max-width: 767px) {\n    width: 150px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  width: 450px;\n  border-radius: 5px;\n  @media (min-width: 900px) {\n    width: 450px;\n  }\n  @media (min-width: 1000px) {\n    width: 450px;\n  }\n  transition: width 0.5s;\n  @media (max-width: 565px) {\n    width: 200px;\n  }\n`;\n\nexport const Styledroad = styled.img`\n  width: 100%;\n  border-radius: 5px;\n  transition: width 0.5s;\n`;\n\nexport const StyledImgSmall = styled.img`\n  width: 220px;\n  height: 220px;\n  border-radius: 5px;\n  @media (min-width: 900px) {\n    width: 220px;\n    height: 220px;\n  }\n  @media (min-width: 1000px) {\n    width: 220px;\n    height: 220px;\n  }\n  transition: width 0.5s;\n  @media (max-width: 565px) {\n    width: 200px;\n  }\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nexport const WalletBox = styled.div`\n  text-decoration: none;\n  border-radius: 10px;\n  border: 2px solid white;\n  background-color: transparent;\n  //padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  width: 180px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px white;\n  -webkit-box-shadow: 0px 4px 0px -2px white;\n  -moz-box-shadow: 0px 4px 0px -2px white;\n  @media (max-width: 565px) {\n    margin-top: 20px;\n  \n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [walletAddress, setAddress] = useState(\"Not Connected\");\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [IncreaseAllowance, setAllowance] = useState(false);\n  const [feedback, setFeedback] = useState(``);\n  const [tokens, settokens] = useState(1);\n  const [brd, setbrd] = useState(\"2px solid #FFFFFF\");\n  const [bxsh, setbxsh] = useState(\"0px 0px 3px 0px #FFFFFF\");\n  const [DOT, setDOT] = useState(\"red\");\n  const [type, setType] = React.useState('info');\n  const [placement, setPlacement] = React.useState('topStart');\n  const errmessage = (\n    <Notification type={'error'} header={'error'} closable>\n     Sorry, something went wrong please try again later.\n    </Notification>\n  );\n  const txmessage = (\n    <Notification type={'success'} header={'success'} closable>\n     Congrats, Mint Was successfull.\n    </Notification>\n  );\n  const mntmessage = (\n    <Notification type={'info'} header={'success'} closable>\n     <Loader/> Minting in Progress....\n    </Notification>\n  );\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    TOKEN_ADDRESS:\"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    DISPLAY_COST: 0,\n    WL_Display: 0,\n    GAS_LIMIT: 0,\n    MAX_PER_TX: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    Telegram: \"\",\n    Discord: \"\",\n    Twitter: \"\",\n    SHOW_BACKGROUND: true,\n  });\n\n  const claimNFTs = () => {\n    if (!IncreaseAllowance) {\n      increaseAllowance();\n      setFeedback(\"Click the mint button again when the token is complete\");\n      return;\n    }\n    let cost = CONFIG.DISPLAY_COST * tokens;\n    let price = Web3.utils.toWei(cost.toString(), 'ether');\n    let gasLimit = 2500000;\n    let totalGasLimit = String(gasLimit);\n    console.log(\"Cost: \", price);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    setbrd(\"2px solid yellow\");\n    setbxsh(\"0px 0px 3px 0px yellow\");\n    toaster.push(mntmessage, { placement })\n    blockchain.smartContract.methods\n      .mint(tokens)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: 0,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n        toaster.push(errmessage, { placement })\n        setbrd(\"2px solid red\");\n        setbxsh(\"0px 0px 3px 0px red\");\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        toaster.push(txmessage, { placement })\n        setbrd(\"2px solid green\");\n        setbxsh(\"0px 0px 3px 0px green\");\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const increaseAllowance = () => {\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalGasLimit = String(gasLimit);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Allows your ${CONFIG.NFT_NAME}...`);\n    console.log(blockchain);\n    setClaimingNft(true);\n    setbrd(\"2px solid yellow\");\n    setbxsh(\"0px 0px 3px 0px yellow\");\n    toaster.push(mntmessage, { placement })\n    blockchain.smartToken.methods\n      .increaseAllowance(\"0x06b1cf95a960fA0Bea2e83cD4DAd24Fb18D9FDB9\",\"100000000000000000000000000000000000000000000\")\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.TOKEN_ADDRESS,\n        from: blockchain.account,\n        value: 0,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n        toaster.push(errmessage, { placement })\n        setbrd(\"2px solid red\");\n        setbxsh(\"0px 0px 3px 0px red\");\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setAllowance(true); // 设置为 true\n        toaster.push(txmessage, { placement });\n        setbrd(\"2px solid green\");\n        setbxsh(\"0px 0px 3px 0px green\");\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n    };\n\n  const decrementtokens = () => {\n    let newtokens = tokens - 1;\n    if (newtokens < 1) {\n      newtokens = 1;\n    }\n    settokens(newtokens);\n  };\n\n  const incrementtokens = () => {\n    let newtokens = tokens + 1;\n    if (newtokens > CONFIG.MAX_PER_TX) {\n      newtokens = CONFIG.MAX_PER_TX;\n    }\n    settokens(newtokens);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      setAddress(blockchain.account.substring(0,4) + \"...\" + blockchain.account.substring(38,42));\n      setDOT(\"green\");\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        // ai={\"center\"}\n        style={{backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <ResponsiveWrapperHeader>\n\n          <LogoDiv>\n          <a href=\"#\" target={\"_blank\"}>\n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n          </a>\n          </LogoDiv>\n\n          <s.Headerlinks>\n      \n          </s.Headerlinks>\n\n\n\n          <s.HeaderDiv>\n          <s.socialDiv>\n          <a href={CONFIG.Telegram} target={\"_blank\"}>\n          <s.Icons src=\"/config/images/telegram.svg\" alt=\"telegram\" />\n          </a>\n            <a href={CONFIG.Twitter} target={\"_blank\"}>\n          <s.Icons src=\"/config/images/twitter.svg\" alt=\"twitter\" />\n          </a>\n          <a href={CONFIG.Discord} target={\"_blank\"}>\n          <s.Icons src=\"/config/images/discord.svg\" alt=\"discord\" />\n          </a>\n    \n          </s.socialDiv>\n          <WalletBox>\n            {blockchain.account !== \"\" ? (\n            <>\n            <s.TextSubTitle style={{fontSize: \"1rem\", color: \"white\"}}>\n            <Badge color={DOT}/> {walletAddress}\n              </s.TextSubTitle>\n            </>\n            ) : null }\n          </WalletBox>\n          </s.HeaderDiv>\n\n        </ResponsiveWrapperHeader>\n        <s.SpacerLarge/>\n\n        <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n          <s.TextTitle>\n            Mint Your {CONFIG.NFT_NAME}\n          </s.TextTitle>\n\n        </s.Container>\n    \n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n        <StyledImg src={\"/config/images/preview.gif\"} alt=\"image\" />\n        <s.SpacerSmall/>\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"} >\n\n\n           {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextSub\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\", fontFamily: \"coder\" }}\n                >\n                  The sale has ended.\n                </s.TextSub>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\", fontFamily: \"coder\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextSub\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\", fontFamily: \"coder\"  }}\n                >\n                  {data.totalSupply} | {CONFIG.MAX_SUPPLY}\n                </s.TextSub>\n                <s.SpacerSmall />\n                <s.TextTotal style={{background: \"white\" , borderRadius: 5, padding: 8, color: \"black\"}}>\n                      Price&emsp;&emsp;&emsp;&emsp;&emsp;{CONFIG.DISPLAY_COST}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                    </s.TextTotal>\n                <s.SpacerMedium/>\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <>\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.SpacerSmall />\n                    <CTNButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT Wallet\n                      <img style={{width: 30, paddingLeft: 10 }} src={\"/config/images/mm.svg\"} />\n                    </CTNButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                            fontFamily: \"coder\",\n                            fontSize: 20\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                  </>\n                ) : (\n                  <>\n                    <s.AmountContainer style={{\n                      border: brd,\n                      boxShadow: bxsh,\n                    }}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementtokens();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.TEXTamount>\n                        &ensp;&ensp;&ensp;&ensp;{tokens}&ensp;&ensp;&ensp;&ensp;\n                      </s.TEXTamount>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementtokens();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.AmountContainer>\n                    <s.SpacerSmall />\n                    <Maxbtn\n                        onClick={(e) => {\n                          e.preventDefault();\n                          settokens(CONFIG.MAX_PER_TX);\n                        }}\n                        >\n                      MaxAmont\n                    </Maxbtn>\n                    <s.SpacerSmall />\n                    <s.SpacerSmall />\n                    <s.TextTotal style={{color: \"black\"}}>\n                      Total&emsp;&emsp;&emsp;&emsp;&emsp;{(CONFIG.DISPLAY_COST * tokens).toString().substring(0, 6)}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                    </s.TextTotal>\n                    <s.SpacerSmall />\n                    <s.SpacerXSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"column\"}>\n                            <StyledButton\n                            disabled={claimingNft ? 1 : 0}\n                            onClick={(e) => {\n                              e.preventDefault();\n                              claimNFTs();\n                              getData();\n                            }}\n                          >{IncreaseAllowance?\n                          claimingNft ? <Loader speed=\"fast\" content=\"Minting...\" /> : \"MINT\" : \"APPLY\"}\n                            \n                          </StyledButton>\n                    </s.Container>\n                    <s.SpacerXSmall/>\n                    <s.TextSubTitle style={{fontSize: 15}}>\n                    Max {CONFIG.MAX_PER_TX} Per Tx\n                    </s.TextSubTitle>\n                    <s.SpacerXSmall/>\n                    <s.TextSubTitle style={{textAlign: \"center\", fontSize: \"1rem\"}}>\n                    {feedback}\n                    </s.TextSubTitle>\n              </>\n            )}\n            </>\n            )}\n            <s.SpacerMedium />\n            </s.Container>\n          <s.SpacerLarge />\n        </ResponsiveWrapper>\n\n\n        <s.SpacerLarge />\n        <s.SecContainer id=\"story\">\n        <s.TextTitle>\n            STORY\n            </s.TextTitle>\n            <s.SpacerLarge/>\n            <s.TextP>\n\nlorem ipsum\n<br></br><br></br>\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n<br></br><br></br>\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.            \n</s.TextP>\n            </s.SecContainer>\n\n           \n\n              \n\n\n\n\n        <s.SpacerMedium />\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  font-family: 'Upheaval';\n  padding: 10px;\n  font-size: 24px;\n  border-radius: 6px;\n  border: none;\n  background-color: #fff;\n  padding: 10px;\n  letter-spacing: 6px;\n  // font-weight: bold;\n  color: #7167E3;\n  width: 450px;\n  height: 50px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 10px;\n  border: none;\n  background-color: #fff;\n  padding: 10px;\n  // font-weight: bold;\n  font-size: 50px;\n  color: #7167E3;\n  width: 60px;\n  height: 60px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  // margin: auto;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const ResponsiveWrapperHeader = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  display: inline;\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  // border: 4px dashed var(--secondary);\n  // background-color: var(--accent);\n  // border-radius: 100%;\n  width: 300px;\n  @media (min-width: 900px) {\n    width: 350px;\n  }\n  @media (min-width: 1000px) {\n    width: 400px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nexport const WalletBox = styled.div`\n  text-decoration: none;\n  border-radius: 10px;\n  border: 2px solid white;\n  background-color: #7167E3;\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  width: 250px;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n`;\n\nfunction Second() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [walletAddress, setAddress] = useState(\"No connection\");\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [IncreaseAllowance, setAllowance] = useState(false);\n  const [feedback, setFeedback] = useState(`Click buy to mint your NFT.`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    WEB_LINK: \"\",\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    if (!IncreaseAllowance) {\n      setFeedback(\"Please call increaseAllowance first.\");\n      increaseAllowance();\n    }\n    let cost = CONFIG.DISPLAY_COST * tokens;\n    let price = Web3.utils.toWei(cost.toString(), 'ether');\n    let gasLimit = 2500000;\n    let totalGasLimit = String(gasLimit);\n    console.log(\"Cost: \", price);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    setbrd(\"2px solid yellow\");\n    setbxsh(\"0px 0px 3px 0px yellow\");\n    toaster.push(mntmessage, { placement })\n    blockchain.smartContract.methods\n      .mint(tokens)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: 0,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n        toaster.push(errmessage, { placement })\n        setbrd(\"2px solid red\");\n        setbxsh(\"0px 0px 3px 0px red\");\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        toaster.push(txmessage, { placement })\n        setbrd(\"2px solid green\");\n        setbxsh(\"0px 0px 3px 0px green\");\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 50) {\n      newMintAmount = 50;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n      setAddress(blockchain.account.substring(0,4) + \"...\" + blockchain.account.substring(38,42));\n    }\n  };\n\n  \n  const increaseAllowance = () => {\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalGasLimit = String(gasLimit);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Allows your ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    setbrd(\"2px solid yellow\");\n    setbxsh(\"0px 0px 3px 0px yellow\");\n    toaster.push(mntmessage, { placement })\n    blockchain.smartToken.methods\n      .increaseAllowance(\"0x06b1cf95a960fA0Bea2e83cD4DAd24Fb18D9FDB9\",\"100000000000000000000000000000000000000000000\")\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.TOKEN_ADDRESS,\n        from: blockchain.account,\n        value: 0,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n        toaster.push(errmessage, { placement })\n        setbrd(\"2px solid red\");\n        setbxsh(\"0px 0px 3px 0px red\");\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, the ${CONFIG.NFT_NAME} is yours! go visit Opensea.io to view it.`\n        );\n        toaster.push(txmessage, { placement })\n        setbrd(\"2px solid green\");\n        setbxsh(\"0px 0px 3px 0px green\");\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        // ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg_minting.png\" : null}\n      >\n        <ResponsiveWrapperHeader>\n          <a href={CONFIG.WEB_LINK}>\n            <StyledLogo alt={\"logo\"} src={\"/config/images/logo_minting.png\"} />\n          </a>\n          <WalletBox>\n            {blockchain.account !== \"\" ? (\n            <>\n            <s.TextSubTitle>\n              {walletAddress}\n              </s.TextSubTitle>\n            </>\n            ) : null }\n          </WalletBox>\n        </ResponsiveWrapperHeader>\n\n        <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n          <s.TextTitle> PUBLIC SALE </s.TextTitle>\n        </s.Container>\n    \n        <s.SpacerSmall />\n\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n            \n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n              <StyledImg alt={\"Gadjah with the duck\"} src={\"/config/images/unr_nft.png\"} />\n            </s.Container>\n            {/* <s.SpacerLarge /> */}\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"} >\n            <s.StyledHR></s.StyledHR>\n            <s.SpacerSmall />\n            {/* <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY}\n            </s.TextTitle> */}\n            {/* <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription> */}\n            {/* <span\n              style={{\n                textAlign: \"center\",\n              }}\n            >\n              <StyledButton\n                onClick={(e) => {\n                  window.open(\"/config/roadmap.pdf\", \"_blank\");\n                }}\n                style={{\n                  margin: \"5px\",\n                }}\n              >\n                Roadmap\n              </StyledButton>\n              <StyledButton\n                style={{\n                  margin: \"5px\",\n                }}\n                onClick={(e) => {\n                  window.open(CONFIG.MARKETPLACE_LINK, \"_blank\");\n                }}\n              >\n                {CONFIG.MARKETPLACE}\n              </StyledButton>\n            </span> */}\n            {/* <s.SpacerSmall /> */}\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextSub\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextSub>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextSub\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\",  }}\n                >\n                  Price&emsp;&emsp;&emsp;&emsp;&emsp;{CONFIG.DISPLAY_COST}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                </s.TextSub>\n                <s.SpacerSmall />\n                <s.StyledHR></s.StyledHR>\n                <s.SpacerXSmall />\n                {/* <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  Excluding gas fees.\n                </s.TextDescription> */}\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {/* Connect to the {CONFIG.NETWORK.NAME} network                       */}\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT TO METAMASK\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.TextDescription\n                        style={{\n                          fontFamily : \"Upheaval\",\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        &ensp;&ensp;&ensp;&ensp;{mintAmount}&ensp;&ensp;&ensp;&ensp;\n                      </s.TextDescription>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.StyledHR ></s.StyledHR>\n                    <s.SpacerSmall />\n                    <s.TextSub\n                      style={{ textAlign: \"center\", color: \"var(--accent-text)\",  }}\n                    >\n                      Total&emsp;&emsp;&emsp;&emsp;&emsp;{CONFIG.DISPLAY_COST * mintAmount}{\" \"}{CONFIG.NETWORK.SYMBOL}\n                    </s.TextSub>\n                    <s.SpacerSmall />\n                    <s.SpacerXSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"MINTING...\" : \"MINT NOW\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n            </s.Container>\n          <s.SpacerLarge />\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default Second;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/RenoMono.8b239c68.otf\";","export default __webpack_public_path__ + \"static/media/upheavtt.e3d365ba.ttf\";","import { createGlobalStyle } from 'styled-components'\nimport RenoMono from './fonts/RenoMono.otf'\nimport Upheaval from './fonts/upheavtt.ttf';\n// import Gumball from './Gumball.ttf';\n\nconst GlobalStyle = createGlobalStyle`\n    @font-face {\n        font-family: 'Upheaval';\n        src: url(${Upheaval}) format('truetype');\n    }\n\n    @font-face {\n        font-family: 'Renomono';\n        src: url(${RenoMono}) format('opentype');\n    }\n`;\n\n// export const Renomono = createGlobalStyle`\n//     @font-face {\n//         font-family: 'Renomono';\n//         src: url(${RenoMono}) format('opentype');\n//     }\n// `;\n\nexport default GlobalStyle;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport Second from \"./second\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport GlobalStyle from \"./fonts\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <GlobalStyle />\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}